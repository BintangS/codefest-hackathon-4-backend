type User = 
 record {
   createdAt: Time;
   id: principal;
   userName: text;
 };
type Time = int;
type Result_2 = 
 variant {
   err: text;
   ok: bool;
 };
type Result_1 = 
 variant {
   err: text;
   ok: Document;
 };
type Result = 
 variant {
   err: text;
   ok: User;
 };
type Document = 
 record {
   createdAt: Time;
   document: blob;
   id: text;
   ownerId: principal;
   signedAt: Time;
   signedBy: principal;
 };
service : {
  createDocument: (principal, blob, principal) -> (Document);
  createDocumentUsingEmail: (principal, blob, text) -> (Result_1);
  createUser: (principal, text) -> (Result);
  deleteUser: (principal) -> (Result_2) query;
  getAllDocumentByUser: (principal) -> (vec Document) query;
  getDocumentByIdAndSigneeId: (text, principal) -> (Result_1) query;
  getUserById: (principal) -> (Result) query;
  greet: (text) -> (text) query;
  signDocument: (principal, blob, text) -> (text);
}
